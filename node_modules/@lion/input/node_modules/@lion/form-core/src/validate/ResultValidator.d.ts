/**
 * @desc Instead of evaluating the result of a regular validator, a ResultValidator looks
 * at the total result of regular Validators. Instead of an execute function, it uses a
 * 'executeOnResults' Validator.
 * ResultValidators cannot be async, and should not contain an execute method.
 */
export class ResultValidator extends Validator {
    constructor(param?: any, config?: {
        [x: string]: any;
    } | undefined);
    /**
     * @param {Object} context
     * @param {Validator[]} context.regularValidationResult
     * @param {Validator[] | undefined} context.prevValidationResult
     * @param {Validator[]} [context.validators]
     * @returns {boolean}
     */
    executeOnResults({ regularValidationResult, prevValidationResult, validators }: {
        regularValidationResult: Validator[];
        prevValidationResult: Validator[] | undefined;
        validators: Validator[];
    }): boolean;
}
import { Validator } from "./Validator.js";
